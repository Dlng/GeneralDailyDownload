//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace GeneralDailyDownload.CasperjsWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DownloadPageAPISoap", Namespace="http://tempuri.org/")]
    public partial class DownloadPageAPI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetDataTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataStreamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTextByCasperjsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DownloadPageAPI() {
            this.Url = global::GeneralDailyDownload.Properties.Settings.Default.GeneralDailyDownload_CasperjsWebService_DownloadPageAPI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetDataTextCompletedEventHandler GetDataTextCompleted;
        
        /// <remarks/>
        public event GetDataStreamCompletedEventHandler GetDataStreamCompleted;
        
        /// <remarks/>
        public event GetTextByCasperjsCompletedEventHandler GetTextByCasperjsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataText", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDataText(string url, string encodingName) {
            object[] results = this.Invoke("GetDataText", new object[] {
                        url,
                        encodingName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataTextAsync(string url, string encodingName) {
            this.GetDataTextAsync(url, encodingName, null);
        }
        
        /// <remarks/>
        public void GetDataTextAsync(string url, string encodingName, object userState) {
            if ((this.GetDataTextOperationCompleted == null)) {
                this.GetDataTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataTextOperationCompleted);
            }
            this.InvokeAsync("GetDataText", new object[] {
                        url,
                        encodingName}, this.GetDataTextOperationCompleted, userState);
        }
        
        private void OnGetDataTextOperationCompleted(object arg) {
            if ((this.GetDataTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataTextCompleted(this, new GetDataTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataStream", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetDataStream(string url, string encodingName) {
            object[] results = this.Invoke("GetDataStream", new object[] {
                        url,
                        encodingName});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDataStreamAsync(string url, string encodingName) {
            this.GetDataStreamAsync(url, encodingName, null);
        }
        
        /// <remarks/>
        public void GetDataStreamAsync(string url, string encodingName, object userState) {
            if ((this.GetDataStreamOperationCompleted == null)) {
                this.GetDataStreamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataStreamOperationCompleted);
            }
            this.InvokeAsync("GetDataStream", new object[] {
                        url,
                        encodingName}, this.GetDataStreamOperationCompleted, userState);
        }
        
        private void OnGetDataStreamOperationCompleted(object arg) {
            if ((this.GetDataStreamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataStreamCompleted(this, new GetDataStreamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTextByCasperjs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTextByCasperjs(string projectName, string scriptName, string paraStr) {
            object[] results = this.Invoke("GetTextByCasperjs", new object[] {
                        projectName,
                        scriptName,
                        paraStr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTextByCasperjsAsync(string projectName, string scriptName, string paraStr) {
            this.GetTextByCasperjsAsync(projectName, scriptName, paraStr, null);
        }
        
        /// <remarks/>
        public void GetTextByCasperjsAsync(string projectName, string scriptName, string paraStr, object userState) {
            if ((this.GetTextByCasperjsOperationCompleted == null)) {
                this.GetTextByCasperjsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTextByCasperjsOperationCompleted);
            }
            this.InvokeAsync("GetTextByCasperjs", new object[] {
                        projectName,
                        scriptName,
                        paraStr}, this.GetTextByCasperjsOperationCompleted, userState);
        }
        
        private void OnGetTextByCasperjsOperationCompleted(object arg) {
            if ((this.GetTextByCasperjsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTextByCasperjsCompleted(this, new GetTextByCasperjsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
 
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDataTextCompletedEventHandler(object sender, GetDataTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDataStreamCompletedEventHandler(object sender, GetDataStreamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataStreamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataStreamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTextByCasperjsCompletedEventHandler(object sender, GetTextByCasperjsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTextByCasperjsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTextByCasperjsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591